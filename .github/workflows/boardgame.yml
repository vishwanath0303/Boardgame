name: BoardGame Application

on:
  push:
    branches: [ "main" ]
    
jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Compile with Maven
      run: mvn compile
      
    - name: Test with Maven 
      run: mvn test
    - name: Build with Maven
      run: mvn install
      
  sonarqube:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run SonarQube Scanner
      env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
          mvn sonar:sonar \
          -Dsonar.projectKey=boardgame \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN
          
  Docker:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
    - name: Set up Docker
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: docker build -t vkulkarni0303/boardgame:${{ github.run_number }} .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  

    - name: Push Docker image
      run: docker push vkulkarni0303/boardgame:${{ github.run_number }}
      env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Clean up containers
      run: |
          docker stop boardgame || true
          docker rm boardgame || true

  
    - name: Deploy Docker container
      run: docker run --name boardgame -d -p 8082:8080 vkulkarni0303/boardgame:${{ github.run_number }}


    
